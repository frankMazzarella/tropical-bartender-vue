<script>
  let activeDrinkOrder;
  let $drinkOrderItem;
  const $deleteModal = $('#delete-modal');
  const $orderedDrinkListDiv = $('#ordered-drink-list-div');
  const $activeDrinkNameSpan = $('#active-drink-name-span');
  const $activeDrinkRecipientSpan = $('#active-drink-recipient-span');
  const $deleteOrderButton = $('#delete-order-button');
  const $deleteOrderButtonSpinner = $('#delete-order-button-spinner');
  const $deleteOrderCancelButton = $('#delete-order-cancel-button');
  const socket = io();

  socket.on('queue update', (orders) => {
    buildOrderList(orders);
    setDrinkItemClickHandlers();
    if (orders.length === 0) showNoOrdersWarning();
  });

  $deleteOrderButton.click(function() {
    setModalLoading();
    socket.emit('delete drink order', activeDrinkOrder.id, () => {
      $deleteModal.modal('toggle');
      setModalReady();
    });
  });

  function showNoOrdersWarning() {
    const noOrdersHTML = `
      <div class="alert alert-primary" role="alert">
        There are no pending drink orders
      </div>
    `;
    $orderedDrinkListDiv.append(noOrdersHTML);
  }

  function setModalLoading() {
    $deleteOrderCancelButton.attr('disabled', true);
    $deleteOrderButton.attr('disabled', true);
    $deleteOrderButtonSpinner.show();
  }

  function setModalReady() {
    $deleteOrderCancelButton.attr('disabled', false);
    $deleteOrderButton.attr('disabled', false);
    $deleteOrderButtonSpinner.hide();
  }

  function buildOrderList(orders) {
    $orderedDrinkListDiv.empty();
    orders.forEach((order) => {
      $orderedDrinkListDiv.append(getRowHTML(order));
    });
  }

  function setDrinkItemClickHandlers() {
    $drinkOrderItem = $('.drink-order-item');
    $drinkOrderItem.click(function() {
      activeDrinkOrder = $(this).data('drink-order');
      $activeDrinkNameSpan.text(activeDrinkOrder.name);
      $activeDrinkRecipientSpan.text(activeDrinkOrder.recipient);
    });
  }

  function getRowHTML(drink) {
    const ingredientList = getIngredientsListString(drink.ingredients);
    const timeOrdered = formatTimeOrdered(drink.timestamp);
    return `
      <button class="list-group-item list-group-item-action flex-column align-items-start drink-order-item"
        data-toggle="modal" data-target="#delete-modal" data-drink-order='${JSON.stringify(drink)}'>
        <div class="d-flex w-100 justify-content-between">
          <h5 class="mb-1">${drink.name}</h5>
          <small>Ordered ${timeOrdered}</small>
        </div>
        <p class="mb-1">${ingredientList}</p>
        <small>Ordered by ${drink.recipient}</small>
      </button>
    `;
  }

  function getIngredientsListString(ingredients) {
    let ingredientList = '';
    ingredients.forEach((ingredient, index) => {
      ingredientList += ingredient;
      if (ingredients.length !== index + 1) ingredientList += ', '
    });
    return ingredientList;
  }

  function formatTimeOrdered(timeOrderedMS) {
    const time = new Date(timeOrderedMS);
    const hours = time.getHours().toString().padStart(2, '0');
    const minutes = time.getMinutes().toString().padStart(2, '0');
    return `${hours}:${minutes}`;
  }
</script>
